services:
  mongo:
    image: mongo:7
    container_name: mongo
    ports:
      - "27017:27017"
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]
    volumes:
      - mongo_data:/data/db
    networks:
      - sailingLocNet

  init-replica:
    image: mongo:7
    depends_on:
      - mongo
    entrypoint: ["sh", "-c", "sleep 5 && mongosh --host mongo:27017 --eval 'rs.initiate({_id:\"rs0\", members:[{_id:0, host:\"mongo:27017\"}]})'"]
    restart: on-failure
    networks:
      - sailingLocNet

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - sailingLocNet
    restart: always

  app:
    build: .
    container_name: app
    depends_on:
      - mongo
      - init-replica
      - redis
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=mongodb://mongo:27017/sailingLoc?replicaSet=rs0
      - REDIS_URL=redis://redis:6379
    command: sh -c "node wait-for-mongo.js && npx prisma db push && node index.js"
    volumes:
      - .:/app
    networks:
      - sailingLocNet

volumes:
  mongo_data:
  redis_data:

networks:
  sailingLocNet:
    driver: bridge
